@using Ididit.Data.Model.Models

<Div Margin=Margin.Is0.OnMobile.Is2.OnDesktop Style="@MaxWidth">

    @if (Settings.ShowAllTasks)
    {
        @foreach (TaskModel task in Filters.FilterAndSortTasks(Repository.AllTasks.Values, Settings))
        {
            <TaskComponent @key=task Task=task @bind-SelectedTask=_selectedTask />
        }
    }
    else
    {
        <Div Margin=Margin.Is1.OnMobile.Is0.OnDesktop>
            <Button Color=Color.Primary Size="Size" Block=true @onclick=NewGoal>@Localizer["Add goal to"] @SelectedCategory.Name</Button>
        </Div>

        if (Settings.ShowAllGoals)
        {
            @foreach (CategoryModel category in Repository.AllCategories.Values)
            {
                if (Settings.ShowCategoriesInGoalList && category.GoalList.Where(goal => Filters.FilterAndSortTasks(goal.TaskList, Settings).Any()).Any())
                {
                    <Button @key=category Margin=Margin.Is2.FromTop.Is2.FromEnd Color=Color.Primary Outline=true Size="Size.Small" @onclick="async () => await OnSelectedCategoryChanged(category)">@category.Name</Button>
                }

                @foreach (GoalModel goal in category.GoalList)
                {
                    <GoalComponent @key=goal Goal=goal @bind-EditDetailsGoal=_editDetailsGoal @bind-EditNameGoal=_editNameGoal Filters=Filters Settings=Settings />
                }
            }
        }
        else
        {
            @foreach (GoalModel goal in SelectedCategory.GoalList)
            {
                <GoalComponent @key=goal Goal=goal @bind-EditDetailsGoal=_editDetailsGoal @bind-EditNameGoal=_editNameGoal Filters=Filters Settings=Settings />
            }
        }
    }

</Div>
